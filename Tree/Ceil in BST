class Tree {
    // Function to return the ceil of given number in BST.
    int findCeil(Node root, int key) {
        if (root == null) return -1;
        // Code here
        int ceil=-1;
        while(root!=null)
        {
        if(root.data==key)
        return key;
        if(root.data>key)
        {  
            ceil=root.data;
            root=root.left;
        }
        else
            root=root.right;
        }
        return ceil;
        // Queue<Node> q = new LinkedList<>();
        // ArrayList<Integer> list = new ArrayList<>();
        // q.add(root);
        // while(q.size()!=0)
        // {
        //     Node n = q.poll();
        //     list.add(n.data);
        //     if(root.left!=null)
        //     q.add(root.left);
        //     if(root.right!=null)
        //     q.add(root.right);
            
        // }
        // Collections.sort(list);
        // int ans=0;
        // for(int i=0;i<list.size();i++)
        // {
        //     if(list.get(i)==key)
        //     return key;
        //     else
        //     ans = list.get(i+1);
        // }
        // return ans;
    }
}
