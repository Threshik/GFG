class Solution {
    static int maxSquare(int n, int m, int mat[][]) {
        // code here
        // int[][] dp = new int[n][m];
        // int max=0;
        // for(int i=0;i<n;i++)
        // {
        //     for(int j=0;j<m;j++)
        //     {
        //         if(mat[i][j]==1)
        //         {
        //             if(i==0 || j==0)
        //             {
        //                 dp[i][j]=1;
        //             }
        //             else
        //             dp[i][j]=Math.min(dp[i][j-1],Math.min(dp[i-1][j],dp[i-1][j-1]))+1;               
        //         }
        //     if(dp[i][j]>max)
        //     {
        //         max=dp[i][j];
        //     }
        //     }
        // }
        // return max;
        int max=0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(mat[i][j]==1)
                {
                    if(i!=0 && j!=0)
                    {
                        mat[i][j]=Math.min(mat[i-1][j],Math.min(mat[i-1][j-1],mat[i][j-1]))+1;
                    }
                }
                max=Math.max(mat[i][j],max);
            }
        }
        return max;
    }
}
